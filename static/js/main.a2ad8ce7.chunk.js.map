{"version":3,"sources":["image/Account.png","image/LoginSignup.png","image/Payment.png","Components/SigninSignup/SigninSignup.js","Components/ContextOrder/ContextOrder.js","Components/Orders/Orders.js","Components/Firebase/Context.js","Components/ValidateOrder/ValidateOrder.js","Components/Header/Header.js","Components/Footer/Footer.js","Components/Welcome/Welcome.js","Components/Login/Login.js","Components/Signup/Signup.js","Components/ErrorPage/ErrorPage.js","Components/Admin/Admin.js","Components/Commande/Commande.js","Components/SummaryOrders/SummaryOrders.js","App.js","Components/Firebase/Firebase.js","Components/Firebase/index.js","serviceWorker.js","index.js"],"names":["module","exports","Landing","className","src","background","alt","to","orderContext","React","createContext","Orders","props","useState","orders","setOrders","order","useContext","found","index","key","id","name","compositions","price","type","value","onClick","i","length","quantity","push","FirebaseContext","ValidateOrder","contextOrder","firebase","userSession","setUserSession","datas","setDatas","useEffect","result","auth","onAuthStateChanged","user","history","getUserOrder","where","uid","get","then","querySnapshot","forEach","doc","undefined","data","futurOrder","obj","element","lastId","addOrder","email","update","addInArray","arrayUnion","isPay","date","Date","Header","signoutUser","Footer","Welcome","listener","displayOrder","foundOrders","catch","error","console","log","ContextOrder","Provider","map","nom","prix","compo","Login","mail","password","loginDatas","setLoginDatas","err","setError","handleChange","e","target","message","onSubmit","preventDefault","loginUser","placeholder","onChange","Signup","signupDatas","setSignupDatas","setErr","signupUser","setUserId","ErrorPage","Admin","input","document","querySelector","removeAttribute","style","color","orderBy","limit","setMenu","min","disabled","Payment","lastOrder","elem","idToDelete","filter","getId","alert","SummaryOrders","el","seconds","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","App","exact","path","component","SigninSignup","Commande","summaryOrders","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","createUserWithEmailAndPassword","userDb","set","signInWithEmailAndPassword","signOut","orderDb","array","removeInArray","app","initializeApp","this","firestore","collection","FieldValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2ad8ce7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Account.02b7d5d2.png\";","module.exports = __webpack_public_path__ + \"static/media/LoginSignup.1b27b6cc.png\";","module.exports = __webpack_public_path__ + \"static/media/Payment.d5e2c438.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport background from '../../image/LoginSignup.png'\r\nimport './style.css'\r\n\r\n\r\nexport default function Landing() {\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <h1 className=\"title\">Passez une commande</h1>\r\n\r\n            <div className=\"ctnr-img-redirection\">\r\n                <img className=\"background\" src={background} alt=\"fond\"></img>\r\n\r\n                <div className=\"redirection\">\r\n                    <Link to=\"signup\">Inscription</Link>\r\n                    <Link to=\"login\">Connexion</Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nconst orderContext = React.createContext(null)\r\n\r\nexport default orderContext;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport orderContext from '../ContextOrder/ContextOrder';\r\n\r\nimport './style.css';\r\n\r\n\r\n\r\n\r\nexport default function Orders(props) {\r\n\r\n    //  Display quantity\r\n    const [orders, setOrders] = useState(0);\r\n\r\n    // Context for send datas\r\n    const order = useContext(orderContext);\r\n\r\n\r\n    let found = false;\r\n    let index = 0;\r\n\r\n    const addQuantity = () => {\r\n\r\n        setOrders(orders + 1);\r\n\r\n        for (let i = 0; i < order.length; i++) {\r\n\r\n            // Verify if index is push\r\n            if (order[i].id === props.id) {\r\n                found = true;\r\n                index = i;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        if (found) {\r\n            // Update quantity\r\n            order[index].quantity = orders;\r\n\r\n        } else {\r\n            // Push value in context\r\n            order.push({\r\n                quantity: orders,\r\n                name: props.name,\r\n                id: props.id,\r\n                price: props.price,\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const removeQuantity = () => {\r\n\r\n        orders === 0 ? setOrders(0) : setOrders(orders - 1);\r\n\r\n        for (let i = 0; i < order.length; i++) {\r\n            // Verify if index is push\r\n            if (order[i].id === props.id) {\r\n                found = true;\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (found) {\r\n            // Update quantity\r\n            order[index].quantity = orders;\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"ctnr-datas\">\r\n\r\n            <div className=\"datas\">\r\n                <li key={props.id}>\r\n                    Nom: {props.name}\r\n                </li>\r\n\r\n                <li>\r\n                    Compositions: {props.compositions}\r\n                </li>\r\n\r\n                <li>\r\n                    Prix: {props.price}€\r\n                </li>\r\n            </div>\r\n            <input\r\n                type=\"button\"\r\n                value=\"Ajouter\"\r\n                onClick={addQuantity}>\r\n            </input>\r\n\r\n            <input\r\n                type=\"button\"\r\n                value=\"Diminuer\"\r\n                onClick={removeQuantity}>\r\n            </input>\r\n\r\n            <p>Vous souhaitez {orders} {props.name}</p>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\n\r\n// Firebase context\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport default FirebaseContext;","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport orderContext from '../ContextOrder/ContextOrder';\r\nimport FirebaseContext from '../Firebase/Context';\r\n\r\nimport './style.css'\r\n\r\nexport default function ValidateOrder(props) {\r\n\r\n    const contextOrder = useContext(orderContext);\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [userSession, setUserSession] = useState(null);\r\n    const [datas, setDatas] = useState(null)\r\n    // const [number, setNumber] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n        let result = [];\r\n\r\n        firebase.auth.onAuthStateChanged(user => {\r\n            user ? setUserSession(user) : props.history.push('/');\r\n\r\n\r\n            firebase.getUserOrder().where('uid', '==', user.uid).get().then(function (querySnapshot) {\r\n\r\n                querySnapshot.forEach(doc => {\r\n                    // If 0 order is push set datas = null\r\n                    if (doc.data().futurOrder == undefined) {\r\n                        return;\r\n                    } else {\r\n                        result.push(doc.data().futurOrder[0].obj);\r\n                    }\r\n                })\r\n\r\n            }).then(() => {\r\n                result.forEach(element => {\r\n                    setDatas(element);\r\n                });\r\n\r\n            })\r\n\r\n        })\r\n\r\n    }, [userSession]);\r\n\r\n    // Effacer seulement le dernier dans commande.js\r\n    // passez datas à autre chose que null dans validateOrder.js\r\n\r\n\r\n\r\n    const handleClick = () => {\r\n        let lastId;\r\n        firebase.getUserOrder().where('uid', '==', userSession.uid).get().then(querySnapshot => {\r\n            querySnapshot.forEach((doc) =>\r\n                lastId = doc.data().futurOrder[doc.data().futurOrder.length - 1].id,\r\n            )\r\n        }).then(() => {\r\n            datas === null ? firebase.addOrder(userSession.uid, userSession.email, contextOrder) : firebase.getUserOrder().doc(userSession.uid).update({\r\n\r\n                futurOrder: firebase.addInArray().arrayUnion({\r\n                    id: lastId + 1,\r\n                    isPay: false,\r\n                    date: new Date(),\r\n                    obj: contextOrder\r\n                })\r\n    \r\n            })\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"validate-order\">\r\n                <hr className=\"line-validate\" />\r\n                <Link to=\"commande\" onClick={handleClick}>Valider votre commande</Link>\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport FirebaseContext from '../Firebase/Context';\r\n\r\nimport './style.css'\r\n\r\nexport default function Header(props) {\r\n\r\n    // Get acess to function of firebase\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [userSession, setUserSession] = useState(null);\r\n\r\n    // If user is not connected and verify user for display admin in menu\r\n    firebase.auth.onAuthStateChanged(user => {\r\n        setUserSession(user.email);\r\n    });\r\n\r\n    return userSession !== 'cyril@hotmail.fr' ? (\r\n\r\n        <header>\r\n\r\n            <h2>\r\n                Bonjour {props.email}\r\n            </h2>\r\n\r\n            <div className=\"nav-disconnected\">\r\n\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"welcome\">Accueil</Link>\r\n                            <Link to=\"commande\">Commande</Link>\r\n                            <Link to=\"summaryOrders\">Récapitulatifs</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n\r\n                <button onClick={firebase.signoutUser}>Se déconnecter</button>\r\n\r\n            </div>\r\n\r\n        </header>\r\n\r\n    ) : (\r\n            <header>\r\n\r\n                <h2>\r\n                    Bonjour {props.email}\r\n                </h2>\r\n\r\n                <div className=\"nav-disconnected\">\r\n\r\n                    <nav>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"welcome\">Accueil</Link>\r\n                                <Link to=\"commande\">Commande</Link>\r\n                                <Link to=\"summaryOrders\">Récapitulatif</Link>\r\n                                <Link to=\"admin\">Admin</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n\r\n                    <button onClick={firebase.signoutUser}>Se déconnecter</button>\r\n\r\n                </div>\r\n            </header>\r\n\r\n        )\r\n\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './style.css'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"welcome\">Accueil</Link>\r\n                        <Link to=\"commande\">Commande</Link>\r\n                        <Link to=\"summaryOrders\">Récapitulatifs</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </footer>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport Orders from '../Orders/Orders';\r\nimport ValidateOrder from '../ValidateOrder/ValidateOrder';\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport './style.css'\r\n\r\n// Firebase context (methods)\r\nimport FirebaseContext from '../Firebase/Context';\r\n\r\n// Context order\r\nimport ContextOrder from '../ContextOrder/ContextOrder';\r\n\r\n\r\n\r\n\r\nexport default function Welcome(props) {\r\n\r\n    // Function in context\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    // User Session\r\n    const [userSession, setUserSession] = useState(null);\r\n\r\n    // set datas about order from firabse\r\n    const [order, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        let listener = firebase.auth.onAuthStateChanged(user => {\r\n            user ? setUserSession(user.email) : props.history.push('/');\r\n        })\r\n\r\n        firebase.displayOrder().get().then(querySnapshot => {\r\n\r\n            const foundOrders = [];\r\n\r\n            querySnapshot.forEach(doc => foundOrders.push(doc.data()));\r\n            setOrders(foundOrders);\r\n\r\n        }).catch(error =>\r\n            console.log(error)\r\n        );\r\n\r\n\r\n        return () => {\r\n            listener()\r\n        }\r\n    }, []);\r\n\r\n\r\n    return userSession === null ? (\r\n\r\n        <div>\r\n            <p>Chargement ...</p>\r\n        </div>\r\n\r\n    ) : (\r\n            <div>\r\n\r\n                <Header email={userSession.email} />\r\n\r\n                <h1 className=\"title-page\">Choix de vos commandes</h1>\r\n                <hr/>\r\n\r\n                <section className=\"container-orders\">\r\n\r\n                    <ContextOrder.Provider value={[]}>\r\n\r\n                        {/* send datas orders for the orders component */}\r\n                        {order.map((datas, index, key) => (\r\n                            <Orders key={datas.id} name={datas.nom} price={datas.prix} compositions={datas.compo} uid={userSession.uid} id={datas.id} />\r\n                        ))}\r\n\r\n                        <ValidateOrder />\r\n\r\n                    </ContextOrder.Provider>\r\n\r\n                </section>\r\n\r\n                <Footer />\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport FirebaseContext from '../Firebase/Context';\r\n\r\nimport './style.css';\r\n\r\nimport background from '../../image/Account.png';\r\n\r\nexport default function Login(props) {\r\n\r\n    // Value of input\r\n    const datas = {\r\n        mail: '',\r\n        password: ''\r\n    };\r\n\r\n    // Get context\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    // Attribute state with object\r\n    const [loginDatas, setLoginDatas] = useState(datas);\r\n\r\n    // Error\r\n    const [err, setError] = useState('');\r\n\r\n    // Destructuring\r\n    const { mail, password } = loginDatas;\r\n\r\n    // Change the state with the new value\r\n    const handleChange = (e) => {\r\n        setLoginDatas({ ...loginDatas, [e.target.id]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Send data to firebase\r\n        firebase.loginUser(mail, password)\r\n            .then(() => {\r\n\r\n                // Redirection in Welcome componenent\r\n                props.history.push('./welcome');\r\n\r\n                // Reset datas\r\n                setLoginDatas({ ...datas });\r\n\r\n            }).catch((err) => {\r\n                setError(err);\r\n            })\r\n    };\r\n\r\n    const error = err !== '' && <span>{err.message}</span>;\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n\r\n                <div className=\"ctnr-form\">\r\n                    <h1 className=\"login\">Se connecter</h1>\r\n\r\n                    <div className=\"ctnr-input\">\r\n\r\n                        {error}\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"email\"\r\n                            value={mail}\r\n                            onChange={handleChange}\r\n                            id=\"mail\">\r\n                        </input>\r\n\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Mot de passe\"\r\n                            value={password}\r\n                            onChange={handleChange}\r\n                            id=\"password\">\r\n                        </input>\r\n\r\n                        <div>\r\n                            <input\r\n                                type=\"submit\">\r\n                            </input>\r\n\r\n                            <Link to='signup'> Mot de passe oublié ?</Link>\r\n                        </div>\r\n\r\n                        <Link className=\"not-signup\" to='signup'> Pas encore inscrit ? <span>S'inscrire</span>  </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n\r\n\r\n            <div className=\"ctnr-img\">\r\n                <img src={background}></img>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport FirebaseContext from \"../Firebase/Context\";\r\n\r\nimport './style.css';\r\n\r\nimport background from '../../image/Account.png';\r\n\r\n\r\nexport default function Signup(props) {\r\n\r\n    // Get functions with context\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    // Datas for 2 inputs\r\n    const datas = {\r\n        mail: '',\r\n        password: ''\r\n    };\r\n\r\n    // get datas for update it\r\n    const [signupDatas, setSignupDatas] = useState(datas);\r\n\r\n    // Error\r\n    const [err, setErr] = useState('');\r\n\r\n    // Destructuring -> mail and password is in object datas\r\n    const { mail, password } = signupDatas;\r\n\r\n    // detect if string is empty else display the errors\r\n    const error = err !== '' && <span>{err.message}</span>;\r\n\r\n\r\n    const handleChange = (e) => {\r\n\r\n        // Get all datas, cibling id, get value, update\r\n        // cibling id: mail = mail / password = password with the new value\r\n        setSignupDatas({ ...signupDatas, [e.target.id]: e.target.value });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        firebase.signupUser(mail, password)\r\n            .then((result) => {\r\n                setSignupDatas({ ...datas });\r\n\r\n                // Add user on database\r\n                firebase.setUserId(result.user.uid, result.user.email, result.user.uid)\r\n                props.history.push('/login')\r\n            })\r\n            .catch((err) => {\r\n                setErr(err);\r\n            })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            {error}\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n\r\n                <div className=\"ctnr-form\">\r\n                    <h1 className=\"login\">S' inscrire</h1>\r\n\r\n                    <div className=\"ctnr-input\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"email\"\r\n                            value={mail}\r\n                            onChange={handleChange}\r\n                            id=\"mail\">\r\n                        </input>\r\n\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Mot de passe\"\r\n                            value={password}\r\n                            onChange={handleChange}\r\n                            id=\"password\">\r\n                        </input>\r\n\r\n                        <div>\r\n                            <input\r\n                                type=\"submit\">\r\n                            </input>\r\n\r\n                            <Link to='signup'> Mot de passe oublié ?</Link>\r\n\r\n                        </div>\r\n\r\n                        <Link className=\"not-signup\" to='login'> Déjà insrit ? <span>Se connecter</span>  </Link>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </form>\r\n\r\n\r\n            <div className=\"ctnr-img\">\r\n                <img src={background} alt=\"fond\"></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ErrorPage() {\r\n    return (\r\n        <div>\r\n            ErrorPage\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport FirebaseContext from '../Firebase/Context';\r\n\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\nimport './style.css'\r\n\r\n\r\nexport default function Admin(props) {\r\n\r\n    // Get context\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    // Value input\r\n    const datas = {\r\n        name: '',\r\n        price: '',\r\n        compositions: ''\r\n    };\r\n\r\n    // State\r\n    const [orders, setOrders] = useState(datas);\r\n\r\n    // Destructuring\r\n    const { name, price, compositions } = orders;\r\n\r\n    const [userSession, setUserSession] = useState(null);\r\n    const input = document.querySelector('.send-datas')\r\n\r\n\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let datas;\r\n\r\n        firebase.displayOrder().orderBy('id', 'desc').limit(1).get().then(querySnapshot => {\r\n            querySnapshot.forEach((doc) =>\r\n                datas = doc.data().id\r\n            )\r\n\r\n            // Add orders in firebase\r\n            if({...datas} == \"\"){\r\n                console.log('vide')\r\n            }\r\n            firebase.setMenu(name, price, compositions, datas + 1)\r\n\r\n\r\n        }).catch(error => console.log(error));\r\n\r\n        // Reset inputs\r\n        setOrders({ ...datas });\r\n    }\r\n\r\n    // Change state\r\n    const handleChange = (e) => {\r\n        setOrders({ ...orders, [e.target.id]: e.target.value });\r\n        if (name !== '' && price !== '' && compositions !== '') {\r\n            input.removeAttribute('disabled');\r\n            input.style.color = '#665df5';\r\n        }\r\n    };\r\n\r\n    // Verify Session\r\n    useEffect(() => {\r\n\r\n        let listener = firebase.auth.onAuthStateChanged(user => {\r\n            user ? setUserSession(user) : props.history.push('/');\r\n        })\r\n\r\n        return () => {\r\n            listener();\r\n        }\r\n    }, [userSession]);\r\n\r\n\r\n\r\n    return userSession === null ? (\r\n        <div>\r\n            <p>Chargement...</p>\r\n        </div>\r\n    ) : (\r\n        <>\r\n            <Header email={userSession.email}/>\r\n            <div>\r\n                <h1 className=\"title-page\">Ajouter un plat</h1>\r\n                <hr />\r\n\r\n                <form className=\"form-admin\" onSubmit={handleSubmit}>\r\n\r\n                    <div>\r\n                        <label>Nom du plat:</label>\r\n                        <input type=\"text\"\r\n                            placeholder=\"pate boulo\"\r\n                            id=\"name\"\r\n                            value={name}\r\n                            onChange={handleChange}>\r\n                        </input>\r\n\r\n                        <label>Prix:</label>\r\n                        <input type=\"number\"\r\n                            placeholder=\"10\"\r\n                            id=\"price\"\r\n                            value={price}\r\n                            onChange={handleChange}\r\n                            min=\"0\">\r\n                        </input>\r\n\r\n                        <label>Compositions:</label>\r\n                        <input type=\"text\"\r\n                            placeholder=\"pate, bolognaise, oignons\"\r\n                            id=\"compositions\"\r\n                            value={compositions}\r\n                            onChange={handleChange}>\r\n                        </input>\r\n\r\n                        <input disabled className=\"send-datas\" type=\"submit\"></input>\r\n\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport background from '../../image/Payment.png'\r\nimport './style.css'\r\n\r\n// Firebase context (methods)\r\nimport FirebaseContext from '../Firebase/Context';\r\n\r\nexport default function Payment(props) {\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    // User datas\r\n    const [userSession, setUserSession] = useState(null);\r\n\r\n    // Last order\r\n    const [datas, setDatas] = useState(null);\r\n\r\n\r\n    // Verify Session\r\n    useEffect(() => {\r\n\r\n        let result;\r\n\r\n        firebase.auth.onAuthStateChanged(user => {\r\n            user ? setUserSession(user) : props.history.push('/');\r\n\r\n            // Get actual user\r\n            firebase.getUserOrder().where('uid', '==', user.uid).get().then(function (querySnapshot) {\r\n                querySnapshot.forEach(doc => {\r\n\r\n                    if (doc.data().futurOrder[doc.data().futurOrder.length - 1]) {\r\n                        const lastOrder = doc.data().futurOrder[doc.data().futurOrder.length - 1];\r\n                        result = lastOrder;\r\n                    }\r\n\r\n\r\n                })\r\n\r\n            }).then(() => {\r\n                setDatas(result);\r\n            })\r\n\r\n        })\r\n\r\n\r\n    }, [userSession]);\r\n\r\n\r\n    const userPayment = () => {\r\n\r\n        //deleteId is the id from the post you want to delete\r\n\r\n        firebase.getUserOrder().where('uid', '==', userSession.uid).get().then(function (querySnapshot) {\r\n            querySnapshot.forEach(doc => {\r\n\r\n                const futurOrder = doc.data().futurOrder;\r\n                const idToDelete = datas.id\r\n\r\n                firebase.getUserOrder().doc(userSession.uid).update({\r\n                    futurOrder: futurOrder.filter(getId => getId.id !== idToDelete)\r\n                })\r\n                    .catch(function (error) {\r\n                        console.error(\"Error removing document: \", error);\r\n                    });\r\n\r\n            })\r\n\r\n        }).then(() => {\r\n\r\n            firebase.getUserOrder().doc(userSession.uid).update({\r\n\r\n                futurOrder: firebase.addInArray().arrayUnion({\r\n                    id: datas.id,\r\n                    isPay: true,\r\n                    date: datas.date,\r\n                    obj: datas.obj\r\n                })\r\n            })\r\n        }).then(() => {\r\n            alert('Merci d\\'avoir payez')\r\n        })\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n    return userSession === null ? (\r\n\r\n        <div>\r\n            <p>Chargement ...</p>\r\n        </div>\r\n    ) : (\r\n            <>\r\n                <Header email={userSession.email} />\r\n\r\n                <h1 className=\"title-page\">Commande</h1>\r\n\r\n                <hr />\r\n\r\n                {datas === null ? <div>Chargement ...</div> :\r\n\r\n                    <section className=\"container-commande\">\r\n                        <div className=\"container-datas-btn\">\r\n                            {console.log(datas)}\r\n                            {datas !== undefined && datas.isPay !== true ?\r\n                                <div>\r\n                                    <p>Vérification de votre commande:</p>\r\n                                    <ul>\r\n                                        {datas.obj.map((elem, key) => {\r\n                                            return <li> {elem.quantity} {elem.name} </li>\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                : <p>Vous n'avez aucune commande</p>}\r\n\r\n                            <div className=\"btn-validate-come-back\">\r\n                                <button className=\"btn-payment\" onClick={userPayment}>Procéder au payement</button>\r\n\r\n                                <Link className=\"btn-payment\" to=\"welcome\">Revenir à mes choix</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"img-commande\">\r\n                            <img src={background}></img>\r\n                        </div>\r\n\r\n                    </section>\r\n\r\n                }\r\n\r\n                <Footer />\r\n            </>\r\n        )\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\n\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport FirebaseContext from '../Firebase/Context';\r\n\r\nimport './style.css'\r\n\r\nexport default function SummaryOrders(props) {\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [userSession, setUserSession] = useState(null);\r\n    const [datas, setDatas] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        let result = [];\r\n        firebase.auth.onAuthStateChanged(user => {\r\n            user ? setUserSession(user) : props.history.push('/')\r\n\r\n            firebase.getUserOrder().where('uid', '==', user.uid).get().then(function (querySnapshot) {\r\n                querySnapshot.forEach(doc => {\r\n\r\n\r\n                    // Get all orders\r\n                    const order = doc.data().futurOrder;\r\n                    result.push(order);\r\n                })\r\n\r\n            }).then(() => {\r\n\r\n                result.forEach((el) => {\r\n                    setDatas(el);\r\n                })\r\n\r\n            })\r\n\r\n        })\r\n\r\n\r\n    }, [userSession]);\r\n\r\n    return userSession === null ? (\r\n        <div>\r\n            <p>Chargement...</p>\r\n        </div>\r\n    ) : (\r\n            <div>\r\n\r\n                <Header email={userSession.email} />\r\n\r\n                <h1 className=\"title-page\">Récapitulatif</h1>\r\n                <hr/>\r\n\r\n                {datas === null ? <div>Chargement ...</div> :\r\n\r\n                    <>\r\n\r\n                        <table>\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Nom</th>\r\n                                    <th>Quantité</th>\r\n                                    <th>Prix €</th>\r\n                                    <th>Prix à l'unité €</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n\r\n                                {datas.map((elem, key) => {\r\n\r\n                                    // Get date of all datas\r\n                                    let date = new Date(elem.date.seconds * 1000)\r\n                                    \r\n\r\n                                    return elem.obj.map((el, key) => {\r\n\r\n                                        const price = el.quantity * el.price;\r\n\r\n\r\n                                        return <tr className=\"test\" key={key}>\r\n\r\n                                            <td>{date.getDate()}/{date.getMonth() + 1}/{date.getFullYear()} à <strong>{date.getHours()}</strong>:<strong>{date.getMinutes()}</strong>:<strong>{date.getSeconds()}</strong></td>\r\n                                            <td>{el.name}</td>\r\n                                            <td>{el.quantity}</td>\r\n                                            <td>{price}</td>\r\n                                            <td>{el.price}</td>\r\n\r\n                                        </tr>\r\n\r\n                                    })\r\n\r\n                                })}\r\n\r\n                            </tbody>\r\n                            \r\n                        </table>\r\n\r\n                    </>\r\n\r\n                }\r\n\r\n                <Footer />\r\n\r\n            </div>\r\n\r\n        )\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SigninSignup from './Components/SigninSignup/SigninSignup';\nimport Welcome from './Components/Welcome/Welcome';\nimport Login from './Components/Login/Login';\nimport Signup from './Components/Signup/Signup';\nimport ErrorPage from './Components/ErrorPage/ErrorPage';\nimport Admin from './Components/Admin/Admin';\nimport Commande from './Components/Commande/Commande';\nimport summaryOrders from './Components/SummaryOrders/SummaryOrders';\n\n\nexport default function App() {\n  \n  return (\n    <div>\n\n      <Router>\n\n\n        <Switch>\n          <Route exact path=\"/\" component={SigninSignup} />\n          <Route path=\"/welcome\" component={Welcome} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/admin\" component={Admin}/>\n          <Route path=\"/commande\" component={Commande}/>\n          <Route path=\"/summaryOrders\" component={summaryOrders}/>\n\n          <Route component={ErrorPage} />\n        </Switch>\n\n      </Router>\n\n    </div>\n  )\n}\n","import app from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDXTa75WNFCxnmqnNuIsv0RcLkRdHfYNOE\",\r\n    authDomain: \"orders-restaurant.firebaseapp.com\",\r\n    databaseURL: \"https://orders-restaurant.firebaseio.com\",\r\n    projectId: \"orders-restaurant\",\r\n    storageBucket: \"orders-restaurant.appspot.com\",\r\n    messagingSenderId: \"454513792586\",\r\n    appId: \"1:454513792586:web:d37e6a07f657da2d5df8b3\",\r\n    measurementId: \"G-XGKP1LD2PF\"\r\n};\r\n\r\n\r\nexport default class Firebase {\r\n    constructor() {\r\n        app.initializeApp(firebaseConfig);\r\n\r\n        // Access authentification\r\n        this.auth = app.auth();\r\n\r\n        // Acess database\r\n        this.userDb = app.firestore().collection('user');\r\n        this.orderDb = app.firestore().collection('orders');\r\n        this.array = app.firestore.FieldValue\r\n    }\r\n\r\n    // Method I can call in all files and use it with the provider who is index.js at the root\r\n\r\n\r\n    // Signup auth\r\n    signupUser = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    // Send user signup datas in database\r\n    setUserId = (uid, email) => this.userDb.doc(uid).set({ email: email, uid: uid })\r\n\r\n    // Login\r\n    loginUser = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    // Disconnected\r\n    signoutUser = () => {this.auth.signOut()};\r\n\r\n    // Send orders in database for admin\r\n    setMenu = (name, price, compositions, id) => this.orderDb.doc().set({\r\n        nom: name,\r\n        prix: price,\r\n        compo: compositions,\r\n        id: id,\r\n    });\r\n\r\n    // Get datas\r\n    displayOrder = () => this.orderDb;\r\n\r\n    getUserOrder = () => this.userDb\r\n\r\n    addInArray = () => this.array\r\n\r\n    removeInArray = () => this.array\r\n\r\n    addOrder = (uid, mail, obj, id) => this.userDb.doc(uid).set({\r\n        uid: uid,\r\n        email: mail,\r\n        futurOrder: [\r\n            {\r\n                id: 0,\r\n                isPay: false,\r\n                date: new Date(),\r\n                obj,\r\n            }\r\n        ]\r\n    })\r\n\r\n\r\n\r\n}","import Firebase from './Firebase';\r\nimport FirebaseContext from './Context';\r\n\r\nexport default Firebase;\r\nexport { FirebaseContext };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Firebase, { FirebaseContext } from './Components/Firebase';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  // Firebase and firebaseContext for get all methods\n\n  <React.StrictMode>\n    {/* New instance of Firebase with method */}\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}